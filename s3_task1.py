"""
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ1
üìå –°–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç—É–¥–µ–Ω—Ç–∞—Ö —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞.
üìå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–≤–µ —Ç–∞–±–ª–∏—Ü—ã: "–°—Ç—É–¥–µ–Ω—Ç—ã" –∏ "–§–∞–∫—É–ª—å—Ç–µ—Ç—ã".
üìå –í —Ç–∞–±–ª–∏—Ü–µ "–°—Ç—É–¥–µ–Ω—Ç—ã" –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è: id, –∏–º—è, —Ñ–∞–º–∏–ª–∏—è,
–≤–æ–∑—Ä–∞—Å—Ç, –ø–æ–ª, –≥—Ä—É–ø–ø–∞ –∏ id —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞.
üìå –í —Ç–∞–±–ª–∏—Ü–µ "–§–∞–∫—É–ª—å—Ç–µ—Ç—ã" –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è: id –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ
—Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞.
üìå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å —Å–≤—è–∑—å –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏ "–°—Ç—É–¥–µ–Ω—Ç—ã" –∏ "–§–∞–∫—É–ª—å—Ç–µ—Ç—ã".
üìå –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö
—Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∏—Ö —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞.
"""
import enum
from turtle import isvisible

# —Å–æ–∑–¥–∞–ª –≤ –ø–∞–ø–∫–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ wsgi.py –∏ 'sqlite:///app01_t.db' –¥–ª—è –ë–î –≤–Ω—É—Ç—Ä–∏ flask_S3


from flask import Flask, render_template
from models_s3_task1 import db, Students, Fags, Gender
from random import choice, randint

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///app01_s3.db'
db.init_app(app)


@app.cli.command("init-db")
def init_db():
    db.create_all()
    print('OK')


@app.cli.command("add-user")
def add_user():
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—ã
    for _ in range(1, 4):
        fag = Fags(fag_name=choice(['math', 'hist', 'lang']))
        db.session.add(fag)
    db.session.commit()
    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    for i in range(1, 11):
        student = Students(name=f'name{i}', last_name=f'last_name{i}', age=i + 20,
                           gender=choice([Gender.male, Gender.female]), group=choice([1, 2, 3]), fags_id=randint(1, 3),
                           isvisible=True)
        db.session.add(student)
    db.session.commit()


@app.cli.command("del-user")
def del_student():
    user = Students.query.filter_by(username='name3', isvisible=False).first()
    # db.session.delete(user)
    db.session.commit()


# —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
@app.route('/')
def index():
    # print('*' * 50)
    student = Students.query.all()
    # print(student)
    return render_template('index_task1.html', student=student)


if __name__ == '__main__':
    app.run(debug=True)
