"""
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ2
üìå –°–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–Ω–∏–≥–∞—Ö –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ.
üìå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–≤–µ —Ç–∞–±–ª–∏—Ü—ã: "–ö–Ω–∏–≥–∏" –∏ "–ê–≤—Ç–æ—Ä—ã".
üìå –í —Ç–∞–±–ª–∏—Ü–µ "–ö–Ω–∏–≥–∏" –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è: id, –Ω–∞–∑–≤–∞–Ω–∏–µ, –≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è,
–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∏ id –∞–≤—Ç–æ—Ä–∞.
üìå –í —Ç–∞–±–ª–∏—Ü–µ "–ê–≤—Ç–æ—Ä—ã" –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è: id, –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è.
üìå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å —Å–≤—è–∑—å –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏ "–ö–Ω–∏–≥–∏" –∏ "–ê–≤—Ç–æ—Ä—ã".
üìå –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–Ω–∏–≥ —Å
—É–∫–∞–∑–∞–Ω–∏–µ–º –∏—Ö –∞–≤—Ç–æ—Ä–æ–≤.
"""

from flask import Flask, render_template
from models_hw3_task2 import db, Author, Book
from random import choice, randint
from turtle import isvisible

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///app02_s3.db'
db.init_app(app)


@app.route('/')
def index():
    return 'Start page'


@app.route('/createdb/')
# @app.cli.command("createdb")
def createdb():
    db.create_all()
    return 'OK! db is create'
    # print('OK! db is create')


@app.route('/add_table/')
# @app.cli.command("add-table")
def add_table():
    # –î–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ—Ä–æ–≤
    cnt_author = 5
    for auth in range(1, cnt_author + 1):
        new_author = Author(username=f'username{auth}', surname=f'Surname{auth}', isvisible=True)
        db.session.add(new_author)
    db.session.commit()
    print('authors added !')
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–∏–≥–∏
    for book in range(1, cnt_author ** 2):
        # author = choice(range(1, cnt_author + 1))
        new_book = Book(book_title=f'book_title{book}', public_year=choice(range(2000, 2024)),
                        copy_quantity=choice(range(100, 10000)), author_id=randint(1, 5), isvisible=True)
        db.session.add(new_book)
    db.session.commit()
    print('books added !')
    return 'OK! Tables author, books - added'


@app.cli.command("del-author")
def del_author():
    del_auth = Author.query.filter_by(username='username2', isvisible=False).first()
    # db.session.delete(del_auth)
    db.session.commit()


@app.route('/all_books/')
def get_all_books():
    """—Ñ—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∫–Ω–∏–≥ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∏—Ö –∞–≤—Ç–æ—Ä–æ–≤."""

    books = Book.query.all()
    context = {'books': books}
    return render_template('books_task2.html', **context)


if __name__ == '__main__':
    app.run(debug=True)
